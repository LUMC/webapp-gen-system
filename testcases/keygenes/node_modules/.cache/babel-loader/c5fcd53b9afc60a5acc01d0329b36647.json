{"ast":null,"code":"import { spring } from 'react-router-transition';\nexport var mapStyles = function mapStyles(styles) {\n  return {\n    opacity: styles.opacity,\n    transform: \"scale(\".concat(styles.scale, \")\")\n  };\n}; // wrap the `spring` helper to use a bouncy config\n\nvar bounce = function bounce(val) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22\n  });\n}; // child matches will...\n\n\nexport var bounceTransition = {\n  // start in a transparent, upscaled state\n  atEnter: {\n    opacity: 0,\n    scale: 1.2\n  },\n  // leave in a transparent, downscaled state\n  atLeave: {\n    opacity: bounce(0),\n    scale: bounce(0)\n  },\n  // and rest at an opaque, normally-scaled state\n  atActive: {\n    opacity: bounce(1),\n    scale: bounce(1)\n  }\n};","map":{"version":3,"sources":["/var/www/html/WebAppGenerator/prototypes/version-0.1/testcases/keygenes/src/constants/routAnimations.js"],"names":["spring","mapStyles","styles","opacity","transform","scale","bounce","val","stiffness","damping","bounceTransition","atEnter","atLeave","atActive"],"mappings":"AAAA,SAASA,MAAT,QAAuB,yBAAvB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAW;AAChC,SAAO;AACHC,IAAAA,OAAO,EAAED,MAAM,CAACC,OADb;AAEHC,IAAAA,SAAS,kBAAWF,MAAM,CAACG,KAAlB;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAQ;AACnB,SAAOP,MAAM,CAACO,GAAD,EAAM;AACfC,IAAAA,SAAS,EAAE,GADI;AAEfC,IAAAA,OAAO,EAAE;AAFM,GAAN,CAAb;AAIH,CALD,C,CAOA;;;AACA,OAAO,IAAMC,gBAAgB,GAAG;AAC5B;AACAC,EAAAA,OAAO,EAAE;AACLR,IAAAA,OAAO,EAAE,CADJ;AAELE,IAAAA,KAAK,EAAE;AAFF,GAFmB;AAM5B;AACAO,EAAAA,OAAO,EAAE;AACLT,IAAAA,OAAO,EAAEG,MAAM,CAAC,CAAD,CADV;AAELD,IAAAA,KAAK,EAAEC,MAAM,CAAC,CAAD;AAFR,GAPmB;AAW5B;AACAO,EAAAA,QAAQ,EAAE;AACNV,IAAAA,OAAO,EAAEG,MAAM,CAAC,CAAD,CADT;AAEND,IAAAA,KAAK,EAAEC,MAAM,CAAC,CAAD;AAFP;AAZkB,CAAzB","sourcesContent":["import { spring } from 'react-router-transition';\n\nexport const mapStyles = (styles) =>{\n    return {\n        opacity: styles.opacity,\n        transform: `scale(${styles.scale})`,\n    };\n}\n\n// wrap the `spring` helper to use a bouncy config\nconst bounce = (val) =>{\n    return spring(val, {\n        stiffness: 330,\n        damping: 22,\n    });\n}\n\n// child matches will...\nexport const bounceTransition = {\n    // start in a transparent, upscaled state\n    atEnter: {\n        opacity: 0,\n        scale: 1.2,\n    },\n    // leave in a transparent, downscaled state\n    atLeave: {\n        opacity: bounce(0),\n        scale: bounce(0),\n    },\n    // and rest at an opaque, normally-scaled state\n    atActive: {\n        opacity: bounce(1),\n        scale: bounce(1),\n    },\n};"]},"metadata":{},"sourceType":"module"}