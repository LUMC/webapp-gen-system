{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/WebAppGenerator/prototypes/version-0.1/testcases/keygenes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/WebAppGenerator/prototypes/version-0.1/testcases/keygenes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport SascWebApi from \"../../apis/SascWeb\";\nimport { protocol } from '../../constants/types';\nexport var excApi = function excApi(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var bodyFormData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                bodyFormData = new FormData();\n                bodyFormData.set('email', data.email);\n                bodyFormData.set('training', data.training);\n                bodyFormData.append('file', data.file[0]);\n                _context.next = 6;\n                return axios({\n                  method: 'post',\n                  url: getState().activeFormClient.tool_name,\n                  data: bodyFormData,\n                  config: {\n                    headers: {\n                      'Content-Type': 'multipart/form-data',\n                      'Accept': 'text/html'\n                    }\n                  }\n                });\n\n              case 6:\n                dispatch({\n                  type: protocol.PROTOCOL_COMPLETED\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/var/www/html/WebAppGenerator/prototypes/version-0.1/testcases/keygenes/src/actions/protocols/directProtocolActions.js"],"names":["axios","SascWebApi","protocol","excApi","data","dispatch","getState","bodyFormData","FormData","set","email","training","append","file","method","url","activeFormClient","tool_name","config","headers","type","PROTOCOL_COMPLETED"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,SAAQC,QAAR,QAAuB,uBAAvB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAU,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,gBAAAA,YADwB,GACT,IAAIC,QAAJ,EADS;AAE5BD,gBAAAA,YAAY,CAACE,GAAb,CAAiB,OAAjB,EAA0BL,IAAI,CAACM,KAA/B;AACAH,gBAAAA,YAAY,CAACE,GAAb,CAAiB,UAAjB,EAA6BL,IAAI,CAACO,QAAlC;AACAJ,gBAAAA,YAAY,CAACK,MAAb,CAAoB,MAApB,EAA4BR,IAAI,CAACS,IAAL,CAAU,CAAV,CAA5B;AAJ4B;AAAA,uBAKtBb,KAAK,CAAC;AACRc,kBAAAA,MAAM,EAAE,MADA;AAERC,kBAAAA,GAAG,EAAET,QAAQ,GAAGU,gBAAX,CAA4BC,SAFzB;AAGRb,kBAAAA,IAAI,EAAEG,YAHE;AAIRW,kBAAAA,MAAM,EAAE;AAAEC,oBAAAA,OAAO,EAAE;AAAC,sCAAgB,qBAAjB;AAAyC,gCAAU;AAAnD;AAAX;AAJA,iBAAD,CALiB;;AAAA;AAW5Bd,gBAAAA,QAAQ,CAAC;AACLe,kBAAAA,IAAI,EAAClB,QAAQ,CAACmB;AADT,iBAAD,CAAR;;AAX4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import axios from \"axios\";\nimport SascWebApi from \"../../apis/SascWeb\";\n\nimport {protocol} from '../../constants/types'\n\nexport const excApi = (data) => async (dispatch, getState) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    await axios({\n        method: 'post',\n        url: getState().activeFormClient.tool_name,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    })\n    dispatch({\n        type:protocol.PROTOCOL_COMPLETED\n    });\n}"]},"metadata":{},"sourceType":"module"}