{"version":3,"sources":["webpack:///./src/interfaces/one-to-many/input.vue?37dc","webpack:///./src/interfaces/one-to-many/input.vue?afc9","webpack:///src/interfaces/one-to-many/input.vue","webpack:///./src/interfaces/one-to-many/input.vue?2156","webpack:///./src/interfaces/one-to-many/input.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_4e1448c1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_4e1448c1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","relationshipSetup","attrs","color","icon","_v","_s","$t","items","on","click","toggleManualSort","name","size","manualSortActive","_e","_l","field","key","type","$event","changeSort","$helpers","formatTitle","sort","asc","class","dragging","readonly","handle","disabled","sortable","start","end","model","value","callback","$$v","itemsSorted","expression","item","relatedPrimaryKeyField","startEdit","interface-type","interface","collection","datatype","options","String","startsWith","stopPropagation","deleteItem","startAddNewItem","selectExisting","fields","visibleFieldNames","relation","collection_many","filters","stagedSelection","selectionPrimaryKeys","input","stageSelection","done","closeSelection","cancel","cancelSelection","to","title","addNew","buttons","save","text","close","closeEditItem","saveEditItem","new-item","relatedCollectionFields","values","editItem","stage-value","stageValue","staticRenderFns","inputvue_type_script_lang_js_","mixins","interface_default","a","data","loading","error","initialValue","_","cloneDeep","computed","visibleFields","Array","isArray","map","val","trim","split","relatedFields","recursiveKey","field_many","fieldInfo","find","primary_key","_this","sortField","sort_field","manyToManyField","mapValues","clone","get","_this2","orderBy","set","newValue","_this3","index","Object","objectSpread","defineProperty","watch","oldValue","emitValue","created","length","methods","fieldName","defaults","default_value","tempKey","shortid_default","generate","hasOwnProperty","concat","toConsumableArray","_ref","$set","_startEdit","asyncToGenerator","regeneratorRuntime","mark","_callee","primaryKey","isNewItem","res","_this4","wrap","_context","prev","next","i","$api","getItem","sent","merge","stop","_x","apply","arguments","_this5","edits","primaryKeys","_closeSelection","_callee2","itemPrimaryKeys","newlyAddedItems","_this6","_context2","filter","includes","difference","join","_this7","_this8","after","before","delta","omitBy","v","k","keys","newVal","savedPrimaryKeys","newPrimaryKeys","deletedKeys","deletedRows","_ref3","_ref2","delete_mode","$emit","one_to_many_inputvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","module","exports","props","id","required","default","Number","Boolean","newItem"],"mappings":"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","file":"js/chunk-0060c2a2.e72d3f6f.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=4e1448c1&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=4e1448c1&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"interface-one-to-many\"},[(_vm.relationshipSetup === false)?_c('v-notice',{attrs:{\"color\":\"warning\",\"icon\":\"warning\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.$t(\"relationship_not_setup\"))+\"\\n  \")]):[(_vm.items.length)?_c('div',{staticClass:\"table\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"row\"},[(_vm.sortable)?_c('button',{staticClass:\"sort-column\",on:{\"click\":_vm.toggleManualSort}},[_c('v-icon',{attrs:{\"name\":\"sort\",\"size\":\"18\",\"color\":_vm.manualSortActive ? 'action' : 'light-gray'}})],1):_vm._e(),_vm._l((_vm.visibleFields),function(field){return _c('button',{key:field.field,attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.changeSort(field.field)}}},[_vm._v(\"\\n            \"+_vm._s(_vm.$helpers.formatTitle(field.field))+\"\\n            \"),(_vm.sort.field === field.field)?_c('v-icon',{attrs:{\"name\":_vm.sort.asc ? 'arrow_downward' : 'arrow_upward',\"size\":\"16\"}}):_vm._e()],1)})],2)]),_c('draggable',{staticClass:\"body\",class:{ dragging: _vm.dragging, readonly: _vm.readonly },attrs:{\"handle\":\".drag-handle\",\"disabled\":!_vm.sortable || !_vm.manualSortActive},on:{\"start\":function($event){_vm.dragging = true},\"end\":function($event){_vm.dragging = false}},model:{value:(_vm.itemsSorted),callback:function ($$v) {_vm.itemsSorted=$$v},expression:\"itemsSorted\"}},_vm._l((_vm.itemsSorted),function(item){return _c('div',{key:item[_vm.relatedPrimaryKeyField],staticClass:\"row\",on:{\"click\":function($event){return _vm.startEdit(item[_vm.relatedPrimaryKeyField])}}},[(_vm.sortable)?_c('div',{staticClass:\"sort-column\",class:{ disabled: !_vm.manualSortActive }},[(!_vm.readonly)?_c('v-icon',{staticClass:\"drag-handle\",attrs:{\"name\":\"drag_handle\"}}):_vm._e()],1):_vm._e(),_vm._l((_vm.visibleFields),function(field){return _c('div',{key:field.field},[_c('v-ext-display',{attrs:{\"interface-type\":field.interface,\"name\":field.field,\"type\":field.type,\"collection\":field.collection,\"datatype\":field.datatype,\"options\":field.options,\"value\":String(item[field.field]).startsWith('$temp_') ? null : item[field.field]}})],1)}),(!_vm.readonly)?_c('button',{staticClass:\"remove\",on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteItem(item[_vm.relatedPrimaryKeyField])}}},[_c('v-icon',{attrs:{\"name\":\"close\"}})],1):_vm._e()],2)}),0)],1):_c('v-notice',[_vm._v(_vm._s(_vm.$t(\"no_items_selected\")))]),(!_vm.readonly)?_c('div',{staticClass:\"buttons\"},[(_vm.options.allow_create)?_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly,\"icon\":\"add\"},on:{\"click\":_vm.startAddNewItem}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"add_new\"))+\"\\n      \")]):_vm._e(),(_vm.options.allow_select)?_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly,\"icon\":\"playlist_add\"},on:{\"click\":function($event){_vm.selectExisting = true}}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"select_existing\"))+\"\\n      \")]):_vm._e()],1):_vm._e()],(_vm.selectExisting)?_c('v-item-select',{attrs:{\"fields\":_vm.visibleFieldNames,\"collection\":_vm.relation.collection_many.collection,\"filters\":[],\"value\":_vm.stagedSelection || _vm.selectionPrimaryKeys},on:{\"input\":_vm.stageSelection,\"done\":_vm.closeSelection,\"cancel\":_vm.cancelSelection}}):_vm._e(),(_vm.editItem)?_c('portal',{attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"title\":_vm.addNew ? _vm.$t('creating_item') : _vm.$t('editing_item'),\"buttons\":{\n        save: {\n          text: _vm.$t('save'),\n          color: 'accent'\n        }\n      }},on:{\"close\":_vm.closeEditItem,\"save\":_vm.saveEditItem}},[_c('div',{staticClass:\"edit-modal-body\"},[_c('v-form',{attrs:{\"new-item\":\"\",\"fields\":_vm.relatedCollectionFields,\"collection\":_vm.relation.collection_many.collection,\"values\":_vm.editItem},on:{\"stage-value\":_vm.stageValue}})],1)])],1):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"interface-one-to-many\">\n    <v-notice v-if=\"relationshipSetup === false\" color=\"warning\" icon=\"warning\">\n      {{ $t(\"relationship_not_setup\") }}\n    </v-notice>\n\n    <template v-else>\n      <div v-if=\"items.length\" class=\"table\">\n        <div class=\"header\">\n          <div class=\"row\">\n            <button v-if=\"sortable\" class=\"sort-column\" @click=\"toggleManualSort\">\n              <v-icon name=\"sort\" size=\"18\" :color=\"manualSortActive ? 'action' : 'light-gray'\" />\n            </button>\n            <button\n              v-for=\"field in visibleFields\"\n              :key=\"field.field\"\n              type=\"button\"\n              @click=\"changeSort(field.field)\"\n            >\n              {{ $helpers.formatTitle(field.field) }}\n              <v-icon\n                v-if=\"sort.field === field.field\"\n                :name=\"sort.asc ? 'arrow_downward' : 'arrow_upward'\"\n                size=\"16\"\n              />\n            </button>\n          </div>\n        </div>\n        <draggable\n          v-model=\"itemsSorted\"\n          class=\"body\"\n          handle=\".drag-handle\"\n          :disabled=\"!sortable || !manualSortActive\"\n          :class=\"{ dragging, readonly }\"\n          @start=\"dragging = true\"\n          @end=\"dragging = false\"\n        >\n          <div\n            v-for=\"item in itemsSorted\"\n            :key=\"item[relatedPrimaryKeyField]\"\n            class=\"row\"\n            @click=\"startEdit(item[relatedPrimaryKeyField])\"\n          >\n            <div v-if=\"sortable\" class=\"sort-column\" :class=\"{ disabled: !manualSortActive }\">\n              <v-icon v-if=\"!readonly\" name=\"drag_handle\" class=\"drag-handle\" />\n            </div>\n            <div v-for=\"field in visibleFields\" :key=\"field.field\">\n              <v-ext-display\n                :interface-type=\"field.interface\"\n                :name=\"field.field\"\n                :type=\"field.type\"\n                :collection=\"field.collection\"\n                :datatype=\"field.datatype\"\n                :options=\"field.options\"\n                :value=\"String(item[field.field]).startsWith('$temp_') ? null : item[field.field]\"\n              />\n            </div>\n            <button\n              v-if=\"!readonly\"\n              class=\"remove\"\n              @click.stop=\"deleteItem(item[relatedPrimaryKeyField])\"\n            >\n              <v-icon name=\"close\" />\n            </button>\n          </div>\n        </draggable>\n      </div>\n      <v-notice v-else>{{ $t(\"no_items_selected\") }}</v-notice>\n\n      <div v-if=\"!readonly\" class=\"buttons\">\n        <v-button\n          v-if=\"options.allow_create\"\n          type=\"button\"\n          :disabled=\"readonly\"\n          icon=\"add\"\n          @click=\"startAddNewItem\"\n        >\n          {{ $t(\"add_new\") }}\n        </v-button>\n\n        <v-button\n          v-if=\"options.allow_select\"\n          type=\"button\"\n          :disabled=\"readonly\"\n          icon=\"playlist_add\"\n          @click=\"selectExisting = true\"\n        >\n          {{ $t(\"select_existing\") }}\n        </v-button>\n      </div>\n    </template>\n\n    <v-item-select\n      v-if=\"selectExisting\"\n      :fields=\"visibleFieldNames\"\n      :collection=\"relation.collection_many.collection\"\n      :filters=\"[]\"\n      :value=\"stagedSelection || selectionPrimaryKeys\"\n      @input=\"stageSelection\"\n      @done=\"closeSelection\"\n      @cancel=\"cancelSelection\"\n    />\n\n    <portal v-if=\"editItem\" to=\"modal\">\n      <v-modal\n        :title=\"addNew ? $t('creating_item') : $t('editing_item')\"\n        :buttons=\"{\n          save: {\n            text: $t('save'),\n            color: 'accent'\n          }\n        }\"\n        @close=\"closeEditItem\"\n        @save=\"saveEditItem\"\n      >\n        <div class=\"edit-modal-body\">\n          <v-form\n            new-item\n            :fields=\"relatedCollectionFields\"\n            :collection=\"relation.collection_many.collection\"\n            :values=\"editItem\"\n            @stage-value=\"stageValue\"\n          />\n        </div>\n      </v-modal>\n    </portal>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport shortid from \"shortid\";\n\nexport default {\n  name: \"InterfaceOneToMany\",\n  mixins: [mixin],\n  data() {\n    return {\n      sort: {\n        field: null,\n        asc: true\n      },\n\n      selectExisting: false,\n      editItem: false,\n      addNew: null,\n\n      dragging: false,\n\n      items: null,\n      loading: false,\n      error: null,\n      stagedSelection: null,\n      initialValue: _.cloneDeep(this.value) || []\n    };\n  },\n\n  computed: {\n    relationshipSetup() {\n      if (!this.relation) return false;\n      return true;\n    },\n\n    visibleFields() {\n      if (this.relationshipSetup === false) return [];\n      if (!this.options.fields) return [];\n\n      let visibleFieldNames;\n\n      if (Array.isArray(this.options.fields)) {\n        visibleFieldNames = this.options.fields.map(val => val.trim());\n      }\n\n      visibleFieldNames = this.options.fields.split(\",\").map(val => val.trim());\n\n      const relatedFields = this.relation.collection_many.fields;\n      const recursiveKey = this.relation.field_many.field;\n\n      return visibleFieldNames.map(name => {\n        const fieldInfo = relatedFields[name];\n\n        if (recursiveKey && name === recursiveKey) {\n          fieldInfo.readonly = true;\n        }\n\n        return fieldInfo;\n      });\n    },\n\n    visibleFieldNames() {\n      return this.visibleFields.map(field => field.field);\n    },\n\n    relatedPrimaryKeyField() {\n      return _.find(this.relation.collection_many.fields, { primary_key: true }).field;\n    },\n\n    selectionPrimaryKeys() {\n      return this.items.map(item => item[this.relatedPrimaryKeyField]);\n    },\n\n    sortField() {\n      const sortField = this.options.sort_field;\n\n      if (!sortField) {\n        return null;\n      }\n\n      return _.find(this.relation.collection_many.fields, { field: sortField });\n    },\n\n    sortable() {\n      return !!this.sortField;\n    },\n\n    manualSortActive() {\n      return this.sort.field === \"$manual\";\n    },\n\n    relatedCollectionFields() {\n      const relatedCollectionFields = this.relation.collection_many.fields;\n\n      // Disable editing the many to one that points to this one to many\n      const manyToManyField = this.relation.field_many && this.relation.field_many.field;\n      return _.mapValues(relatedCollectionFields, field => {\n        const clone = _.clone(field);\n\n        if (clone.field === manyToManyField) {\n          clone.readonly = true;\n        }\n\n        return clone;\n      });\n    },\n\n    itemsSorted: {\n      get() {\n        if (this.sort.field === \"$manual\") {\n          return _.orderBy(\n            _.cloneDeep(this.items),\n            item => item[this.sortField.field],\n            this.sort.asc ? \"asc\" : \"desc\"\n          );\n        }\n\n        return _.orderBy(\n          _.cloneDeep(this.items),\n          item => item[this.sort.field],\n          this.sort.asc ? \"asc\" : \"desc\"\n        );\n      },\n      set(newValue) {\n        this.items = newValue.map((item, index) => {\n          return {\n            ...item,\n            [this.sortField.field]: index + 1\n          };\n        });\n      }\n    }\n  },\n  watch: {\n    items(value, oldValue) {\n      // When oldvalue is null, it's the very first load\n      if (oldValue === null) return;\n      this.emitValue(value);\n    }\n  },\n\n  created() {\n    if (this.sortable) {\n      this.sort.field = \"$manual\";\n    } else {\n      if (this.visibleFieldNames && this.visibleFieldNames.length > 0) {\n        this.sort.field = this.visibleFieldNames[0];\n      }\n    }\n\n    this.items = _.cloneDeep(this.value) || [];\n  },\n\n  methods: {\n    changeSort(fieldName) {\n      if (this.sort.field === fieldName) {\n        this.sort.asc = !this.sort.asc;\n        return;\n      }\n\n      this.sort.asc = true;\n      this.sort.field = fieldName;\n      return;\n    },\n\n    toggleManualSort() {\n      this.sort.field = \"$manual\";\n      this.sort.asc = true;\n    },\n\n    startAddNewItem() {\n      this.addNew = true;\n\n      const relatedCollectionFields = this.relation.collection_many.fields;\n      const defaults = _.mapValues(relatedCollectionFields, field => field.default_value);\n      const manyToManyField = this.relation.field_many && this.relation.field_many.field;\n      const tempKey = \"$temp_\" + shortid.generate();\n\n      if (defaults.hasOwnProperty(this.relatedPrimaryKeyField)) {\n        delete defaults[this.relatedPrimaryKeyField];\n      }\n\n      if (defaults.hasOwnProperty(manyToManyField)) {\n        delete defaults[manyToManyField];\n      }\n\n      this.items = [\n        ...this.items,\n        {\n          [this.relatedPrimaryKeyField]: tempKey,\n          ...defaults\n        }\n      ];\n\n      this.startEdit(tempKey);\n    },\n\n    stageValue({ field, value }) {\n      this.$set(this.editItem, field, value);\n    },\n\n    async startEdit(primaryKey) {\n      let values = _.cloneDeep(this.items.find(i => i[this.relatedPrimaryKeyField] === primaryKey));\n\n      const isNewItem = typeof primaryKey === \"string\" && primaryKey.startsWith(\"$temp_\");\n\n      if (isNewItem === false) {\n        const collection = this.relation.collection_many.collection;\n        const res = await this.$api.getItem(collection, primaryKey, { fields: \"*.*.*\" });\n        const item = res.data;\n\n        values = _.merge({}, item, values);\n      }\n\n      this.editItem = values;\n    },\n\n    saveEditItem() {\n      const primaryKey = this.editItem[this.relatedPrimaryKeyField];\n\n      const manyToManyField = this.relation.field_many && this.relation.field_many.field;\n\n      this.items = this.items.map(item => {\n        if (item[this.relatedPrimaryKeyField] === primaryKey) {\n          const edits = _.clone(this.editItem);\n\n          // Make sure we remove the many to one field that points to this o2m to prevent this nested item\n          // to be accidentally assigned to another parent\n          if (edits.hasOwnProperty(manyToManyField)) {\n            delete edits[manyToManyField];\n          }\n\n          return edits;\n        }\n\n        return item;\n      });\n\n      this.editItem = null;\n    },\n\n    closeEditItem() {\n      this.editItem = null;\n    },\n\n    stageSelection(primaryKeys) {\n      this.stagedSelection = primaryKeys;\n    },\n\n    async closeSelection() {\n      const primaryKeys = this.stagedSelection || [];\n\n      // Remove all the items from this.items that aren't selected anymore\n      this.items = this.items.filter(item => {\n        const primaryKey = item[this.relatedPrimaryKeyField];\n        return primaryKeys.includes(primaryKey);\n      });\n\n      // Fetch all newly selected items so we can render them in the table\n      const itemPrimaryKeys = this.items.map(item => item[this.relatedPrimaryKeyField]);\n      const newlyAddedItems = _.difference(primaryKeys, itemPrimaryKeys);\n\n      const res = await this.$api.getItem(\n        this.relation.collection_many.collection,\n        newlyAddedItems.join(\",\"),\n        {\n          fields: \"*.*.*\"\n        }\n      );\n\n      const items = Array.isArray(res.data) ? res.data : [res.data];\n\n      this.items = [...this.items, ...items];\n      this.stagedSelection = null;\n      this.selectExisting = false;\n    },\n\n    cancelSelection() {\n      this.stagedSelection = null;\n      this.selectExisting = false;\n    },\n\n    deleteItem(primaryKey) {\n      this.items = this.items.filter(item => item[this.relatedPrimaryKeyField] !== primaryKey);\n    },\n\n    emitValue(value) {\n      value = _.cloneDeep(value);\n\n      const recursiveKey = this.relation.field_many.field;\n\n      const newValue = value\n        .map(after => {\n          const primaryKey = after[this.relatedPrimaryKeyField];\n\n          const before = this.initialValue.find(i => i[this.relatedPrimaryKeyField] === primaryKey);\n\n          if (before) {\n            const delta = _.omitBy(after, (v, k) => before[k] === v);\n\n            if (Object.keys(delta).length > 0) {\n              const newVal = {\n                [this.relatedPrimaryKeyField]: before[this.relatedPrimaryKeyField]\n              };\n\n              if (\n                recursiveKey &&\n                newVal[this.relatedPrimaryKeyField].hasOwnProperty(recursiveKey)\n              ) {\n                delete newVal[recursiveKey];\n              }\n\n              return _.merge({}, newVal, delta);\n            } else {\n              return null;\n            }\n          }\n\n          if (recursiveKey && after.hasOwnProperty(recursiveKey)) {\n            delete after[recursiveKey];\n          }\n\n          if (\n            typeof after[this.relatedPrimaryKeyField] === \"string\" &&\n            after[this.relatedPrimaryKeyField].startsWith(\"$temp_\")\n          ) {\n            delete after[this.relatedPrimaryKeyField];\n          }\n\n          return after;\n        })\n        .filter(i => i);\n\n      const savedPrimaryKeys = this.initialValue.map(item => item[this.relatedPrimaryKeyField]);\n      const newPrimaryKeys = value.map(item => item[this.relatedPrimaryKeyField]);\n      const deletedKeys = _.difference(savedPrimaryKeys, newPrimaryKeys);\n      const deletedRows = deletedKeys.map(key => {\n        if (this.options.delete_mode === \"relation\") {\n          return {\n            [this.relatedPrimaryKeyField]: key,\n            [recursiveKey]: null\n          };\n        }\n\n        return {\n          [this.relatedPrimaryKeyField]: key,\n          $delete: true\n        };\n      });\n\n      this.$emit(\"input\", [...newValue, ...deletedRows]);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table {\n  background-color: var(--white);\n  border: var(--input-border-width) solid var(--lighter-gray);\n  border-radius: var(--border-radius);\n  border-spacing: 0;\n  width: 100%;\n  margin: 16px 0 24px;\n\n  .header {\n    height: var(--input-height);\n    border-bottom: 2px solid var(--lightest-gray);\n\n    button {\n      text-align: left;\n      font-weight: 500;\n      transition: color var(--fast) var(--transition);\n\n      &:hover {\n        transition: none;\n        color: var(--darker-gray);\n      }\n    }\n\n    i {\n      vertical-align: top;\n      color: var(--light-gray);\n    }\n  }\n\n  .row {\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n\n    > div {\n      padding: 3px 5px;\n      flex-basis: 200px;\n    }\n  }\n\n  .header .row {\n    align-items: center;\n    height: 40px;\n\n    & > button {\n      padding: 3px 5px 2px;\n      flex-basis: 200px;\n    }\n  }\n\n  .body {\n    max-height: 275px;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n\n    .row {\n      cursor: pointer;\n      position: relative;\n      height: 50px;\n      border-bottom: 2px solid var(--off-white);\n\n      &:hover {\n        background-color: var(--highlight);\n      }\n\n      & div:last-of-type {\n        flex-grow: 1;\n      }\n\n      button {\n        color: var(--lighter-gray);\n        transition: color var(--fast) var(--transition);\n\n        &:hover {\n          transition: none;\n          color: var(--danger);\n        }\n      }\n    }\n\n    &.readonly {\n      pointer-events: none;\n    }\n  }\n\n  .sort-column {\n    flex-basis: 36px !important;\n\n    &.disabled i {\n      color: var(--lightest-gray);\n      cursor: not-allowed;\n    }\n  }\n}\n\n.drag-handle {\n  cursor: grab;\n}\n\n.dragging {\n  cursor: grabbing !important;\n}\n\n.buttons {\n  margin-top: 24px;\n}\n\n.buttons > * {\n  display: inline-block;\n}\n\n.buttons > *:first-child {\n  margin-right: 24px;\n}\n\n.edit-modal-body {\n  padding: 30px 30px 60px 30px;\n  background-color: var(--body-background);\n  .form {\n    grid-template-columns:\n      [start] minmax(0, var(--column-width)) [half] minmax(0, var(--column-width))\n      [full];\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=4e1448c1&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=4e1448c1&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4e1448c1\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}